import { AxiosInstance } from 'axios';
import { ISO_8601_MS_UTC, PaginatedData, Pagination } from '../payload/common';
export interface TransferInformation {
    account_id: string;
    amount: string;
    canceled_at?: ISO_8601_MS_UTC;
    completed_at?: ISO_8601_MS_UTC;
    created_at: ISO_8601_MS_UTC;
    details: {
        coinbase_account_id?: string;
        coinbase_payment_method_id?: string;
        coinbase_transaction_id?: string;
        coinbase_withdrawal_id?: string;
        crypto_address?: string;
        crypto_transaction_hash?: string;
        crypto_transaction_id?: string;
        destination_tag: string;
        destination_tag_name?: string;
        sent_to_address?: string;
    };
    id: string;
    processed_at?: ISO_8601_MS_UTC;
    type: string;
    user_id: string;
    user_nonce?: string;
}
export declare enum TransferType {
    DEPOSIT = "deposit",
    WITHDRAW = "withdraw"
}
export declare class TransferAPI {
    private readonly apiClient;
    static readonly URL: {
        TRANSFERS: string;
    };
    constructor(apiClient: AxiosInstance);
    /**
     * Get a list of deposits/withdrawals from the profile of the API key, in descending order by created time.
     *
     * @param pagination - Pagination field
     * @see https://docs.pro.coinbase.com/#list-deposits
     * @see https://docs.pro.coinbase.com/#list-withdrawals
     */
    getTransfers(transferType: TransferType, profileId?: string, pagination?: Pagination): Promise<PaginatedData<TransferInformation>>;
    /**
     * Get information on a single deposit/withdrawal.
     *
     * @param transferId - id of the requested resource
     * @see https://docs.pro.coinbase.com/#single-deposit
     * @see https://docs.pro.coinbase.com/#single-withdrawal
     */
    getTransfer(transferId: string): Promise<TransferInformation>;
}
