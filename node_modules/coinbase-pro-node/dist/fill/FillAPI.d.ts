import { AxiosInstance } from 'axios';
import { ISO_8601_MS_UTC, UUID_V4, OrderSide, Pagination, PaginatedData } from '../payload/common';
export declare enum Liquidity {
    MAKER = "M",
    TAKER = "T"
}
export interface Fill {
    created_at: ISO_8601_MS_UTC;
    fee: string;
    liquidity: Liquidity;
    order_id: UUID_V4;
    price: string;
    product_id: string;
    profile_id: UUID_V4;
    settled: boolean;
    side: OrderSide;
    size: string;
    trade_id: number;
    usd_volume: string;
    user_id: string;
}
export declare class FillAPI {
    private readonly apiClient;
    static readonly URL: {
        FILLS: string;
    };
    constructor(apiClient: AxiosInstance);
    /**
     * Get a list of recent fills for a given Order of the API key's profile.
     *
     * @param orderId - ID of previously placed order
     * @param pagination - Pagination field
     * @see https://docs.pro.coinbase.com/#list-fills
     * @see https://pro.coinbase.com/orders/filled
     */
    getFillsByOrderId(orderId: string, pagination?: Pagination): Promise<PaginatedData<Fill>>;
    /**
     * Get a list of recent fills for a given Product of the API key's profile.
     *
     * @param productId - Representation for base and counter
     * @param pagination - Pagination field
     * @see https://docs.pro.coinbase.com/#list-fills
     * @see https://pro.coinbase.com/orders/filled
     */
    getFillsByProductId(productId: string, pagination?: Pagination): Promise<PaginatedData<Fill>>;
}
